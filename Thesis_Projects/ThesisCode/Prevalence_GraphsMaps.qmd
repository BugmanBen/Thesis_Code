---
title: " Fixing 2yr MIR Calc "
author: "Ben Burgunder"
date: today
date-format: "MMM D, YYYY"

editor: source

format:
  html:
    title-block-banner: true
    toc: true
    toc-depth: 6
    toc-float: true
    code-overflow: wrap
    code-fold: true
    theme: flatly
    
bibliography: grateful-refs.bib

fig-width: 8
fig-height: 7
---

### Loading Packages

```{r}
#| label: load_packages and set theme
#| message: false
#| warning: false

if (!require(pacman)) install.packages("pacman")
pacman::p_load(binGroup,
               cowplot,
               here, 
               flextable,
               ggrepel,
               ggdark,
               ggmap,
               grateful,
               lubridate,
               fitdistrplus,
               ggpubr,
               magick,
               magrittr,
               mass,
               flextable,
               forcats,
               patchwork,
               scales,
               tidyverse, 
               usmap,
               update = FALSE)

theme_set(theme_bw())

# cite_packages(omit = c("ggsn","ggthemes", "Unicode"),out.dir = ".")

my_custom_theme <- function() {
  theme(legend.key.size = unit(2, 'cm'), #change legend key size
        legend.box.background = element_rect(color="white", size=2),
        legend.key.height = unit(1.01, 'cm'), #change legend key height
        legend.key.width = unit(0.8, 'cm'), #change legend key width
        legend.title = element_text(size=20, face="bold"), #change legend title font size
        legend.text = element_text(size=15),
        plot.title = element_text(size=30),
        strip.text = element_text(size=18),
        axis.title = element_text(size=22),
        axis.text = element_text(size = 18))
  }
```

### Reading in Data

```{r}
#| label: Read_Data
#| message: false
#| warning: false


MEGAwg<-read.csv(here::here("Thesis_Projects","CSVs", "MEGA_prev_df2.csv")) #update
MEGA_Tm_Amp<-read.csv(here::here("Thesis_Projects","CSVs", "MEGA_Tm_Amp2.csv")) #update
Hex21_Cats<-read.csv(here::here("Thesis_Projects","CSVs", "Hex_Cat_guide.csv"))
SortFusion<-read.csv(here::here("Thesis_Projects","CSVs", "Site_CatLatLong.csv"))
MosqQuant<-read.csv(here::here("Thesis_Projects","CSVs", "MosquitoQuantities.csv")) #update
FullSampleList<-read.csv(here::here("Thesis_Projects","CSVs", "A2_ListofallMosqTested.csv"))

NamedMQ<-MosqQuant %>% 
  rename(Name.x=FullName)

MEGA_prev<-merge(MEGAwg,MEGA_Tm_Amp, by=c("PlateVal", "Pos"), all = TRUE)
Cat_MEGa_prev<-merge(MEGA_prev,Hex21_Cats, by=c("Hex"), all = TRUE)
Cat_quant_MEGA<-merge(Cat_MEGa_prev,NamedMQ, by=c("Name.x"), all = TRUE)

```

### Wrangling Data 
### Listed Positives
```{r}
#| label: Wrangling
#| message: false
#| warning: false

Cat_quant_MEGA$Tm1 <- as.numeric(Cat_quant_MEGA$Tm1)


LP_CMP <- Cat_quant_MEGA %>%
  dplyr::select(c(
    "Month","Hex","Pos","Name.x","Cp","Species","Tm1","Category", "PlateVal","Pos","Year")) %>%
  dplyr::filter(Cp <= 37, between(Tm1, 80.4, 82.4)) 

NoNAs_LP<-na.omit(LP_CMP) %>% 
  dplyr::group_by(Species, Month, Hex, Name.x, Category, PlateVal,Year) %>%
  dplyr::summarize(AVGCP = mean(Cp), AVGTM = mean(Tm1))

#how many positives per hex per week?
SummedLP_BY <- NoNAs_LP %>%
  dplyr::group_by(Month, Hex, Category, Year) %>%
  dplyr::summarize(count = n())

```

### Total Samples
```{r}
#| label: Graphing
#| message: false
#| warning: false
 
#how many positives per hex per week?
MIR_Summed_LP <- NoNAs_LP %>%
  dplyr::group_by(Species,Month, Hex, Category, Year) %>%
  dplyr::summarize(count = n())

MIR_TotalSamples <- Cat_quant_MEGA %>%
  dplyr::select(c(
    "Month",
    "Hex",
    "Pos",
    "Name.x",
    "Cp",
    "Year",
    "Species",
    "Tm1",
    "Category", "CountMosq"
  )) %>%
  dplyr::group_by(Species, Hex, Name.x, Category, Year,Month,CountMosq) %>%
  dplyr::summarize(AVGCP = mean(Cp), AVGTM = mean(Tm1))

MIR_Summed_TotalSamples <- MIR_TotalSamples %>%
  dplyr::group_by(Species,Hex, Category, Year,Month) %>%
    dplyr::select(c(-"AVGCP",-"AVGTM")) %>% 
  dplyr::summarize(count = n(),summed_MQ=sum(CountMosq)) 

noNA_MIRSummed<-na.omit(MIR_Summed_TotalSamples)

MIR_Merge_All <- merge(MIR_Summed_LP,
                    noNA_MIRSummed,
                    by = c("Month","Species", "Hex", "Category","Year"),
                    all = TRUE) %>%
  mutate(Positive = ifelse(is.na(count.x), 0, count.x),
         FracPos = Positive / summed_MQ) %>%
  dplyr::select(-count.x) 


MIRcalc_ALL <- MIR_Merge_All %>%
  dplyr::mutate(MIR = FracPos * 1000) %>% 
  dplyr::rename(TotalSamples=count.y) %>% 
  relocate(TotalSamples, .after=Positive) %>% 
mutate(Month = case_when(
    Month == "PA" ~ "August", 
    Month == "PJ" ~ "July",
    Month=="RJ"~"July",
    Month=="RA"~"August"))


MIRcalc_ALL$Category_fac=factor(MIRcalc_ALL$Category, levels=c('Lower','Equal', 'Higher'))
MIRcalc_ALL$Month_f=factor(MIRcalc_ALL$Month, levels=c('July','August'))

mir_plot_title <- expression(paste(italic("Culex "), "Infection Rate by Site Category" ))

file_path <- here::here("qPCR_ResultData", "MIRcalcAll.csv")
write.csv(MIRcalc_ALL, file_path, row.names = FALSE)

```


###Inconsistent Pool Size MLE
```{r}
#samples + pool size
LS_longways=MIR_TotalSamples %>%
  dplyr::select(c(-"AVGCP",-"AVGTM"))
NoNA_LS<-na.omit(LS_longways)

#positives
LP_longways<-NoNAs_LP %>%
  mutate(Positive=1)

MergeLongways<-merge(NoNA_LS,LP_longways, by=c("Name.x"),all.x=TRUE) %>%
  mutate(positive = ifelse(is.na(Year.y), 0, 1)) %>%
  dplyr::select(Name.x,Species.x,Hex.x,Category.x,Year.x,Month.x,CountMosq,positive)

MergeLongways2<-MergeLongways %>% 
  rename(Year=Year.x,
         Species=Species.x,
         Month=Month.x)

file_path2 <- here::here("Thesis_Projects","CSVs", "IPS_MergeLongways.csv")
write.csv(MergeLongways2, file_path2, row.names = FALSE)

```

```{r}
##Species and Year+Month
MIR_Graph_Poster_SpandYrandmonth_woCats<-MIRcalc_ALL %>% mutate(Species = case_when(
    Species == "R" ~ "Cx. restuans", 
    Species == "P" ~ "Cx. pipiens")) %>% 
  # filter(MIR<250) %>% 
  ggplot(aes(
    x = Species,
    y = MIR,
    fill = Species,
  )) +
   #facet_wrap(~Month_f)+
  facet_grid(Year~Month_f,space="free")+
  geom_boxplot(color = "black",
               outlier.shape = NA,
               alpha = 0.3) +
  scale_fill_manual(values = c("lightgoldenrod", "cadetblue2")) +
  geom_jitter(aes(fill=Species),size=3, shape=21,color="black") +
   scale_x_discrete(labels = expression(italic("Cx. pipiens"), italic("Cx. restuans"))) +
   my_custom_theme()+
  theme(legend.position = 'none',
        plot.title = element_text(size=22))+
     # coord_cartesian(ylim = c(0,200))+
  labs(fill="Category",x="Species", y="Minimum Infection Rate per 1000 Mosquitoes", title=""
       #title=expression(paste("Surveyed ",italic("Culex "), "Infection Rate, Extreme Outliers (MIR > 200) Not Shown" ))
       )

MIR_Graph_Poster_SpandYrandmonth_woCats

ggsave(here::here("Thesis_Projects", "Figures", "MIR_Graph_Poster_SpandYrandmonth_woCats.png"),  width = 12, height = 7, dpi = 300)
```
### MIR Categories
```{r}
  MIR_CatSp_ALL_Graph_2<-MIRcalc_ALL %>% mutate(Species = case_when(
   Species == "R" ~ "Cx. restuans",
   Species == "P" ~ "Cx. pipiens")) %>%  
  # filter(Species=="Cx. pipiens") %>% 
  ggplot(aes(
    x = Species,
    y = MIR,
    fill = Category_fac,
  )) +
  facet_wrap(~Month_f)+
  geom_boxplot(color = "black",
               outlier.shape = NA,
               alpha = 0.3) +
  scale_fill_manual(values = c("#25CED1", "#FF7F50", "#F8C537")) +
  geom_jitter(aes(fill = Category_fac), position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.75), size=3, shape=21,color="black") +
   # scale_x_discrete(labels = expression(italic("Cx. pipiens"), italic("Cx. restuans"))) +
  my_custom_theme()+
  labs(fill="Category",x="Species", y="Minimum Infection Rate per 1000 Mosquitoes",title=""
       # title=expression(paste(italic("Culex "), "Infection Rate by Site Category (MIR < 200)" ))
       )+
  theme(axis.text.x = element_text(face = "italic"))+
  coord_cartesian(ylim=c(0,200))

MIR_CatSp_ALL_Graph_2

ggsave(here::here("Thesis_Projects", "Figures", "MIR_CatSp_poster.png"),  width = 10, height = 8, dpi = 300)

```
### Mapping Positivity Adjusted

```{r}
library("ggmap")

register_stadiamaps("53c28c44-18b7-483b-bb9a-ceab0cf2abe1")

A2BaseMap_2=get_stadiamap(bbox = c(left = -88.21, bottom = 41.94, right = -87.79, top = 42.17), zoom = 12, maptype = c("stamen_terrain_lines"), labels="false")

SortedFusion<-SortFusion %>% 
  dplyr::rename(Hex=Code)

MappingTable1<- MIRcalc_ALL %>% 
   group_by(Year,Hex, Species,Month) %>% 
dplyr::summarise(total_positives = sum(Positive, na.rm = TRUE)) %>% 
pivot_wider(
    names_from = Species,  # Values from this column will become column names
    values_from = total_positives # Values from this column will fill the new columns
) %>% 
    mutate(R = ifelse(is.na(R), 0, R),
           P = ifelse(is.na(P), 0, P))


RecodedMappingTable1<-MappingTable1 %>% 
  mutate(
    category = case_when(
      R > 0 & P > 0 ~ "Positive P and R",
      R > 0 & P <= 0 ~ "Positive R",
      R <= 0 & P > 0 ~ "Positive P",
      R <= 0 & P <= 0 ~ "Negative")) 
  
  
bubble_df<- left_join(MIRcalc_ALL,SortedFusion,by="Hex") %>% 
  #filter(Species=="R")
   filter(Species=="P")

Bubble_Map_Prev=
  ggmap(A2BaseMap_2)+
    facet_grid(Year.x~Month_f)+
  labs(x="Longitude",y="Latitude")+
  geom_point(data=bubble_df, aes(x=longitude, y=latitude, size=factor(Positive)), shape=24, fill="#9fc5e8ff")+
  #geom_point(data=bubble_df, aes(x=longitude, y=latitude, size=factor(Positive)), shape=24, fill="#ffe599ff")+
  my_custom_theme()+
   scale_size_manual(values = c("0" = 2, "1" = 6), breaks = c("0", "1")) +
  #scale_size_manual(values = c("0" = 1, "1" = 3,"2"=5,"3"=8), breaks = c("0", "1","2","3")) +
   labs(shape="Category", size="Positive \n Pools", title = "")+
  theme(axis.text = element_text(size=8),
    axis.title = element_text(size=12))

Bubble_Map_Prev

#ggsave(here::here("Thesis_Projects", "Figures", "PSpeciesPositivity_scaled.png"),  width = 12, height = 8, dpi = 300)
 ggsave(here::here("Thesis_Projects", "Figures", "RSpeciesPositivity_scaled.png"),  width = 12, height = 8, dpi = 300)


```
###Visual Representation of positivity
```{r}
library("ggmap")
register_stadiamaps("53c28c44-18b7-483b-bb9a-ceab0cf2abe1")
A2BaseMap_2=get_stadiamap(bbox = c(left = -88.21, bottom = 41.94, right = -87.79, top = 42.17), zoom = 12, maptype = c("stamen_terrain_lines"), labels="false")
# ggmap(A2BaseMap_2)

SortedFusion<-SortFusion %>% 
  dplyr::rename(Hex=Code)

MappingTable1<- MIRcalc_ALL %>% 
   group_by(Hex, Species,Month, Year) %>% 
dplyr::summarise(total_positives = sum(Positive, na.rm = TRUE)) %>% 
pivot_wider(
    names_from = Species,  # Values from this column will become column names
    values_from = total_positives # Values from this column will fill the new columns
) %>% 
    mutate(R = ifelse(is.na(R), 0, R),
           P = ifelse(is.na(P), 0, P))

RecodedMappingTable1<-MappingTable1 %>% 
  mutate(
    category = case_when(
      R > 0 & P > 0 ~ "Positive P and R",
      R > 0 & P <= 0 ~ "Positive R",
      R <= 0 & P > 0 ~ "Positive P",
      R <= 0 & P <= 0 ~ "Negative")) 
  
MErgedMappingDf<- left_join(RecodedMappingTable1,SortedFusion,by="Hex")
MErgedMappingDf$Month_f=factor(MErgedMappingDf$Month.x, levels=c('July','August'))

MIRPosHexMap= ggmap(A2BaseMap_2)+
  labs(x="Longitude",y="Latitude")+
  geom_point(data=MErgedMappingDf, aes(x=longitude, y=latitude, fill=category), size=7, shape=24,color="black")+
  facet_wrap(~Month_f)+
  facet_grid(Year.x~Month_f)+
  scale_fill_manual(values = c("white","#ffe599ff", "#89bf37", "#9fc5e8ff")) +
  my_custom_theme()+
  labs(shape="Category", fill="Positivity", title = "")+
  theme(axis.text = element_text(size=8),
    axis.title = element_text(size=12))

MIRPosHexMap

ggsave(here::here("Thesis_Projects", "Figures", "SpeciesPositivity.png"),  width = 12, height = 8, dpi = 300)

```


```{r}
MappingTable2<- MIRcalc_ALL %>% 
   group_by(Hex, Species,Month) %>% 
dplyr::summarise(total_positives = sum(Positive, na.rm = TRUE)) %>% 
pivot_wider(
    names_from = Species,  # Values from this column will become column names
    values_from = total_positives # Values from this column will fill the new columns
) %>% 
    mutate(R = ifelse(is.na(R), 0, R),
           P = ifelse(is.na(P), 0, P))

RecodedMappingTable2<-MappingTable2 %>% 
  mutate(
    category = case_when(
      R > 0 & P > 0 ~ "Positive P and R",
      R > 0 & P <= 0 ~ "Positive R",
      R <= 0 & P > 0 ~ "Positive P",
      R <= 0 & P <= 0 ~ "Negative")) 
  
MErgedMappingDf2<- left_join(RecodedMappingTable2,SortedFusion,by="Hex")
MErgedMappingDf2$Month_f=factor(MErgedMappingDf2$Month.x, levels=c('July','August'))

MIRPosHexMap2= ggmap(A2BaseMap_2)+
  labs(x="Longitude",y="Latitude")+
  geom_point(data=MErgedMappingDf2, aes(x=longitude, y=latitude, fill=category), size=7, shape=24,color="black")+
  facet_wrap(~Month_f)+
  # facet_grid(Year.x~Month_f)+
  scale_fill_manual(values = c("white","#ffe599ff", "#89bf37", "#9fc5e8ff")) +
  my_custom_theme()+
  labs(shape="Category", fill="Positivity", title = "")+
  theme(axis.text = element_text(size=8),
    axis.title = element_text(size=12),
    legend.position='none')

MIRPosHexMap2

ggsave(here::here("Aim1Code", "Figures", "SpeciesPositivity2.png"),  width = 10, height = 9, dpi = 300)
```
###Table Formatting
```{r}
Tabled_P_MIR_calc_All<-MIRcalc_ALL %>% 
  filter(Species=="P") %>% 
  mutate(
    Month = fct_relevel(
      Month,
      c("July","August")),
    Category=fct_relevel(Category,
      c("Lower","Equal","Higher")
    )
  ) %>% 
  dplyr::select(c(Month,Year,Category,Hex,MIR)) %>% 
    mutate(Month_Year = paste(Month, Year, sep = "_")) %>% 
  dplyr::select(-Month, -Year) %>%  # Drop the original Month and Year columns
  pivot_wider(names_from = Month_Year, values_from = c(MIR))
  

Tabled_P_MIR_calc_All

file_path <- here::here("qPCR_ResultData", "P_Tabled_joinedMIR.csv")
write.csv(Tabled_P_MIR_calc_All, file_path, row.names = FALSE)

#Restuans
Tabled_R_MIR_calc_All<-MIRcalc_ALL %>% 
  filter(Species=="R") %>% 
  mutate(
    Month = fct_relevel(
      Month,
      c("July","August")),
    Category=fct_relevel(Category,
      c("Lower","Equal","Higher")
    )
  ) %>% 
  dplyr::select(c(Month,Year,Category,Hex,MIR)) %>% 
    mutate(Month_Year = paste(Month, Year, sep = "_")) %>% 
  dplyr::select(-Month, -Year) %>%  # Drop the original Month and Year columns
  pivot_wider(names_from = Month_Year, values_from = c(MIR))

Tabled_R_MIR_calc_All

file_path <- here::here("qPCR_ResultData", "R_Tabled_joinedMIR.csv")
write.csv(Tabled_R_MIR_calc_All, file_path, row.names = FALSE)
```
