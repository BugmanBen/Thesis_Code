---
title: " Aim 2: Distance Matrices Between Sites"
author: "Ben Burgunder"
date: today
date-format: "MMM D, YYYY"

editor: source

format:
  html:
    title-block-banner: true
    toc: true
    toc-depth: 6
    toc-float: true
    code-overflow: wrap
    code-fold: true
    theme: flatly

fig-width: 8
fig-height: 7
---

### Loading Packages

```{r}
#| label: load_packages and set theme
#| message: false
#| warning: false

if (!require(pacman)) install.packages("pacman")
pacman::p_load(broom,
               cowplot,
               here, 
               ggrepel,
               ggdark,
               ggdensity,
               ggmap,
               geosphere,
               lubridate,
               magrittr,
               maps,
               mapdata,
               flextable,
               patchwork,
               tidyverse, 
               usmap,
               update = FALSE)

theme_set(theme_bw())

```


### Data Frames
```{r}
#| label: Read_Data
#| message: false
#| warning: false
#| 
data<-read.csv(here("Thesis_Projects","CSVs", "Site_CatLatLong.csv")) %>% 
  dplyr::select(c(Trap.ID,longitude,latitude,Category))
MIR_calc_all_analysis<-read.csv(here::here("Thesis_Projects","CSVs", "MIRcalcAll.csv"))

A2G<-read.csv(here::here("Thesis_Projects","CSVs", "Attempttograph.csv"))

```

```{r}
#| label: Distance_Matrix
#| message: false
#| warning: false

# Set the row names to the site names
row.names(data) <- data$Trap.ID
# Extract the coordinates
coords <- data %>% dplyr::select(longitude,latitude)
# Calculate the distance matrix using the Haversine formula
distance_matrix <- distm(coords, fun = distHaversine)
# Convert the distance matrix from meters to kilometers
distance_matrix_km <- distance_matrix / 1000
# Set the row and column names of the distance matrix to the site names
row.names(distance_matrix_km) <- data$Trap.ID
colnames(distance_matrix_km) <- data$Trap.ID
# distance_matrix_km[upper.tri(distance_matrix_km)] <- NA
distance_matrix_km = as.data.frame(distance_matrix_km)
distance_matrix_km$Site1 = rownames(distance_matrix_km)
dm_long = distance_matrix_km %>%
  pivot_longer(cols = names(distance_matrix_km)[1:21], names_to = 'Site2', values_to = 'distance (km)')
dm_long = na.omit(dm_long)
dm_long = dm_long %>%
  arrange(Site1)

# data<-read.csv(here("Thesis_Projects","CSVs", "SortFusion.csv")) %>% 
#   dplyr::select(c(Trap.ID,longitude,latitude))
```


### Differences in PropPip
```{r}
#| label: Prop_Matrix
#| message: false
#| warning: false

A3G<-A2G %>% 
  filter(Year=="2021",Month=="Jul") %>% 
  dplyr::select(Hex,PropPip)

# Extract vector
PropPip <- A3G$PropPip
# Compute absolute differences between each pair of sites
pp_diff_matrix <- outer(PropPip, PropPip, FUN = function(x, y) abs(x - y))
row.names(pp_diff_matrix) <- A3G$Hex
colnames(pp_diff_matrix) <- A3G$Hex
pp_diff_matrix[upper.tri(pp_diff_matrix)] <- NA
pp_diff_matrix = as.data.frame(pp_diff_matrix)
pp_diff_matrix$site_1 = rownames(pp_diff_matrix)
practicedm_long = pp_diff_matrix %>%
  pivot_longer(cols = names(pp_diff_matrix)[1:21], names_to = 'site_2', values_to = 'Diff in Prop')
practicedm_long = na.omit(practicedm_long)
j21_DiffsinPropPip_long = practicedm_long %>%
  arrange(site_1) %>% 
  mutate(Quarter="July 2021")


A3G<-A2G %>% 
  filter(Year=="2021",Month=="Aug") %>% 
  dplyr::select(Hex,PropPip)

# Extract vector
PropPip <- A3G$PropPip
# Compute absolute differences between each pair of sites
pp_diff_matrix <- outer(PropPip, PropPip, FUN = function(x, y) abs(x - y))
row.names(pp_diff_matrix) <- A3G$Hex
colnames(pp_diff_matrix) <- A3G$Hex
pp_diff_matrix[upper.tri(pp_diff_matrix)] <- NA
pp_diff_matrix = as.data.frame(pp_diff_matrix)
pp_diff_matrix$site_1 = rownames(pp_diff_matrix)
practicedm_long = pp_diff_matrix %>%
  pivot_longer(cols = names(pp_diff_matrix)[1:21], names_to = 'site_2', values_to = 'Diff in Prop')
practicedm_long = na.omit(practicedm_long)
a21_DiffsinPropPip_long = practicedm_long %>%
  arrange(site_1) %>% 
  mutate(Quarter="August 2021")


A3G<-A2G %>% 
  filter(Year=="2022",Month=="Jul") %>% 
  dplyr::select(Hex,PropPip)

# Extract vector
PropPip <- A3G$PropPip
# Compute absolute differences between each pair of sites
pp_diff_matrix <- outer(PropPip, PropPip, FUN = function(x, y) abs(x - y))
row.names(pp_diff_matrix) <- A3G$Hex
colnames(pp_diff_matrix) <- A3G$Hex
pp_diff_matrix[upper.tri(pp_diff_matrix)] <- NA
pp_diff_matrix = as.data.frame(pp_diff_matrix)
pp_diff_matrix$site_1 = rownames(pp_diff_matrix)
practicedm_long = pp_diff_matrix %>%
  pivot_longer(cols = names(pp_diff_matrix)[1:21], names_to = 'site_2', values_to = 'Diff in Prop')
practicedm_long = na.omit(practicedm_long)
j22_DiffsinPropPip_long = practicedm_long %>%
  arrange(site_1) %>% 
  mutate(Quarter="July 2022")


A3G<-A2G %>% 
  filter(Year=="2022",Month=="Aug") %>% 
  dplyr::select(Hex,PropPip)

# Extract vector
PropPip <- A3G$PropPip
# Compute absolute differences between each pair of sites
pp_diff_matrix <- outer(PropPip, PropPip, FUN = function(x, y) abs(x - y))
row.names(pp_diff_matrix) <- A3G$Hex
colnames(pp_diff_matrix) <- A3G$Hex
pp_diff_matrix[upper.tri(pp_diff_matrix)] <- NA
pp_diff_matrix = as.data.frame(pp_diff_matrix)
pp_diff_matrix$site_1 = rownames(pp_diff_matrix)
practicedm_long = pp_diff_matrix %>%
  pivot_longer(cols = names(pp_diff_matrix)[1:21], names_to = 'site_2', values_to = 'Diff in Prop')
practicedm_long = na.omit(practicedm_long)
a22_DiffsinPropPip_long = practicedm_long %>%
  arrange(site_1) %>% 
  mutate(Quarter="August 2022")

FourQuartersLongest<-rbind(j21_DiffsinPropPip_long,a21_DiffsinPropPip_long,j22_DiffsinPropPip_long,a22_DiffsinPropPip_long)


```


###Prev
```{r}

MIR_calc_all_analysis_1<-read.csv(here::here("Thesis_Projects","CSVs", "MIRcalcAll.csv"))

MIR_calc_all_analysis<-MIR_calc_all_analysis_1 %>% 
  dplyr::filter(Species=="P",Year=="2021",Month=="August") %>% 
  dplyr::select(Hex,MIR)
# Generate pairwise comparisons
pairwise_comparisons <- combn(MIR_calc_all_analysis$Hex, 2, simplify = FALSE)
# Create a new data frame to hold the comparisons
a21_comparison_df <- data.frame(
  Site1 = sapply(pairwise_comparisons, `[`, 1),
  Site2 = sapply(pairwise_comparisons, `[`, 2),
  Rate1 = sapply(pairwise_comparisons, function(x) MIR_calc_all_analysis$MIR[MIR_calc_all_analysis$Hex == x[1]]),
  Rate2 = sapply(pairwise_comparisons, function(x) MIR_calc_all_analysis$MIR[MIR_calc_all_analysis$Hex == x[2]])
) %>% 
  mutate(Absdiff=abs(Rate1-Rate2)) %>% 
    mutate(Quarter="August 2021")


MIR_calc_all_analysis<-MIR_calc_all_analysis_1 %>% 
  filter(Species=="P",Year=="2021",Month=="July") %>% 
  dplyr::select(Hex,MIR)
# Generate pairwise comparisons
pairwise_comparisons <- combn(MIR_calc_all_analysis$Hex, 2, simplify = FALSE)
# Create a new data frame to hold the comparisons
j21_comparison_df <- data.frame(
  Site1 = sapply(pairwise_comparisons, `[`, 1),
  Site2 = sapply(pairwise_comparisons, `[`, 2),
  Rate1 = sapply(pairwise_comparisons, function(x) MIR_calc_all_analysis$MIR[MIR_calc_all_analysis$Hex == x[1]]),
  Rate2 = sapply(pairwise_comparisons, function(x) MIR_calc_all_analysis$MIR[MIR_calc_all_analysis$Hex == x[2]])
) %>% 
  mutate(Absdiff=abs(Rate1-Rate2)) %>% 
    mutate(Quarter="July 2021")

MIR_calc_all_analysis<-MIR_calc_all_analysis_1 %>% 
  filter(Species=="P",Year=="2022",Month=="August") %>% 
  dplyr::select(Hex,MIR)
# Generate pairwise comparisons
pairwise_comparisons <- combn(MIR_calc_all_analysis$Hex, 2, simplify = FALSE)
# Create a new data frame to hold the comparisons
a22_comparison_df <- data.frame(
  Site1 = sapply(pairwise_comparisons, `[`, 1),
  Site2 = sapply(pairwise_comparisons, `[`, 2),
  Rate1 = sapply(pairwise_comparisons, function(x) MIR_calc_all_analysis$MIR[MIR_calc_all_analysis$Hex == x[1]]),
  Rate2 = sapply(pairwise_comparisons, function(x) MIR_calc_all_analysis$MIR[MIR_calc_all_analysis$Hex == x[2]])
) %>% 
  mutate(Absdiff=abs(Rate1-Rate2)) %>% 
    mutate(Quarter="August 2022")

MIR_calc_all_analysis<-MIR_calc_all_analysis_1 %>% 
  filter(Species=="P",Year=="2022",Month=="July") %>% 
  dplyr::select(Hex,MIR)
# Generate pairwise comparisons
pairwise_comparisons <- combn(MIR_calc_all_analysis$Hex, 2, simplify = FALSE)
# Create a new data frame to hold the comparisons
j22_comparison_df <- data.frame(
  Site1 = sapply(pairwise_comparisons, `[`, 1),
  Site2 = sapply(pairwise_comparisons, `[`, 2),
  Rate1 = sapply(pairwise_comparisons, function(x) MIR_calc_all_analysis$MIR[MIR_calc_all_analysis$Hex == x[1]]),
  Rate2 = sapply(pairwise_comparisons, function(x) MIR_calc_all_analysis$MIR[MIR_calc_all_analysis$Hex == x[2]])
) %>% 
  mutate(Absdiff=abs(Rate1-Rate2)) %>% 
    mutate(Quarter="July 2022")

FourQuartersPrev<-rbind(a21_comparison_df,a22_comparison_df,j21_comparison_df,j22_comparison_df)

```

###Prev Graphing
```{r}
#| label: Joining_matrices_prev
#| message: false
#| warning: false

joined_matrices_prev<-
  left_join(dm_long,FourQuartersPrev, 
                   by=c("Site1","Site2"))
joined_matrices_prev = na.omit(joined_matrices_prev) %>% 
  rename(Distance='distance (km)')
joined_matrices_prev$Month_f = factor(joined_matrices_prev$Quarter, levels=c('July 2021','August 2021','July 2022','August 2022'))
  

DVD_Whole<-joined_matrices_prev %>% 
  # filter(Quarter=="August 2022") %>% 
  ggplot(aes(x=Distance,y=Absdiff))+
  geom_hdr()+
  geom_point(shape=21)+
  theme(axis.title = element_text(size=10),
        axis.text = element_text(size = 10))+
  scale_x_continuous(n.breaks = 10)+
  scale_y_continuous(n.breaks = 10)+
  theme(legend.position="none",
    plot.title = element_text(size=22),
        strip.text = element_text(size=18),
        axis.title = element_text(size=22),
        axis.text = element_text(size = 15))+
  labs(x="Distance between Sites (km)", y=expression(paste("Absolute Difference Between Site ", italic(" Cx. pipiens"), " MIR")), title="")+
  geom_smooth(method = "lm") # for linear trendline
DVD_Whole


PrevRegressionDistvsDiff<-joined_matrices_prev %>% 
  # filter(Quarter=="August 2022") %>% 
  ggplot(aes(x=Distance,y=Absdiff, fill=Month_f))+
  facet_wrap(~Month_f)+
  geom_hdr()+
  geom_point(shape=21)+
  scale_fill_viridis_d(option = "viridis", direction=-1, begin=0.3,end=0.8)+
  theme(axis.title = element_text(size=10),
        axis.text = element_text(size = 10))+
  scale_x_continuous(n.breaks = 10)+
  scale_y_continuous(n.breaks = 10)+
  theme(legend.position="none",
    plot.title = element_text(size=22),
        strip.text = element_text(size=18),
        axis.title = element_text(size=22),
        axis.text = element_text(size = 15))+
  labs(x="Distance between Sites (km)", y=expression(paste("Absolute Difference Between Site ", italic(" Cx. pipiens"), " MIR")), title="")+
  geom_smooth(method = "lm") # for linear trendline
PrevRegressionDistvsDiff  
  
ggsave(here::here("Thesis_Projects", "Figures", "PrevDistanceDifferences.png"),  width = 10, height = 7, dpi = 300)

```

###Analysis
```{r}
#| label: Analysis
#| message: false
#| warning: false


joined_matrices_prev2 <-joined_matrices_prev %>% 
  rename(
    # Distance='distance (km)',
         Difference=Absdiff)

cor.test(joined_matrices_prev2$Distance, joined_matrices_prev2$Difference)

j21_data_prev <- subset(joined_matrices_prev2, Quarter == "July 2021") #significant
a21_data_prev <- subset(joined_matrices_prev2, Quarter == "August 2021")
j22_data_prev <- subset(joined_matrices_prev2, Quarter == "July 2022")
a22_data_prev <- subset(joined_matrices_prev2, Quarter == "August 2022") #significant

cor.test(j21_data_prev$Distance, j21_data_prev$Difference)
cor.test(a21_data_prev$Distance, a21_data_prev$Difference)
cor.test(j22_data_prev$Distance, j22_data_prev$Difference)
cor.test(a22_data_prev$Distance, a22_data_prev$Difference)

```

### JoindiffMatrices

```{r}
#| label: Joining_matrices
#| message: false
#| warning: false

FourQuartersLongest <-FourQuartersLongest %>% 
  rename(Site1=site_1,Site2=site_2)

joined_matrices<-
  left_join(FourQuartersLongest,dm_long, 
                   by=c("Site1","Site2"))
joined_matrices = na.omit(joined_matrices) %>% 
  mutate(PropDiff=`Diff in Prop`/100)

joined_matrices$Month_f = factor(joined_matrices$Quarter, levels=c('July 2021','August 2021','July 2022','August 2022'))

RegressionDistvsDiff<-joined_matrices %>% 
  # filter(Quarter=="August 2022") %>% 
  ggplot(aes(x=`distance (km)`,y=PropDiff, fill=Month_f))+
  facet_wrap(~Month_f)+
  geom_hdr()+
  geom_point(shape=21)+
  scale_fill_viridis_d(option = "viridis", direction=-1, begin=0.3,end=0.8)+
  theme(axis.title = element_text(size=10),
        axis.text = element_text(size = 10))+
  scale_x_continuous(n.breaks = 10)+
  scale_y_continuous(n.breaks = 10)+
  theme(legend.position="none",
    plot.title = element_text(size=20),
        strip.text = element_text(size=18),
        axis.title = element_text(size=22),
        axis.text = element_text(size = 18))+
  labs(fill="Category",x="Distance between Sites (km)", y="Change in Species Composition between Sites", color="Sampling Week",title="")+
    geom_smooth(method = "lm") # for linear trendline
RegressionDistvsDiff
  
ggsave(here::here("Thesis_Projects", "Figures", "CompositionDistanceDifferences.png"),  width = 10, height = 7, dpi = 300)

```

```{r}
#| label: Analysis of Community Comp
#| message: false
#| warning: false
joined_matrices <-joined_matrices %>% 
  rename(Distance='distance (km)',
         Difference=PropDiff)

j21_data <- subset(joined_matrices, Quarter == "July 2021")
a21_data <- subset(joined_matrices, Quarter == "August 2021")
j22_data <- subset(joined_matrices, Quarter == "July 2022")
a22_data <- subset(joined_matrices, Quarter == "August 2022")

cor.test(j21_data$Distance, j21_data$Difference)
cor.test(a21_data$Distance, a21_data$Difference)
cor.test(j22_data$Distance, j22_data$Difference)
cor.test(a22_data$Distance, a22_data$Difference)

#all but Aug 2022 significant

```


