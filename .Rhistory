Month=="A"~"August")) %>%
mutate(Month = factor(Month, levels = month.name)) %>%
ggplot(aes(
x = Species,
y = PointEst,
fill = Species,
)) +
facet_wrap(~Month)+
geom_bar(color = "black",alpha = 0.3, stat="identity") +
geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.2, color = "black", linewidth = 1) +  # Confidence intervals
scale_fill_manual(values = c("lightgoldenrod", "cadetblue2")) +
scale_x_discrete(labels = expression(italic("Cx. pipiens"), italic("Cx. restuans"))) +
my_custom_theme()+
theme(legend.position = 'none',
plot.title = element_text(size=22))+
labs(fill="Category",x="Species", y="Infection Rate (MLE)", title="")
IPS_Graph
IPS_Graph_Categorized<-IPS_Categorized %>%
filter(CI=="bsc") %>%
mutate(Species = case_when(
Species == "R" ~ "Cx. restuans",
Species == "P" ~ "Cx. pipiens"),
Month=case_when(
Month=="J"~"July",
Month=="A"~"August"),
Category=case_when(
Category=="L"~"Lower",
Category=="E"~"Equal",
Category=="H"~"Higher",
)) %>%
mutate(Month = factor(Month, levels = month.name),
Category=factor(Category, levels=c("Lower","Equal","Higher"))) %>%
ggplot(aes(
x = Species,
y = PointEst,
fill = Category,
)) +
facet_wrap(~Month)+
# geom_bar(color = "black",alpha = 0.3, stat="identity", position="dodge") +
# geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.2, color = "black", linewidth = 1, position="dodge") +  # Confidence intervals
geom_bar(stat = "identity", position = position_dodge(width = 0.9), color="black",alpha=0.3) +  # Bars dodged
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(width = 0.9),  # Error bars dodged
width = 0.25) +
scale_fill_manual(values = c("#25CED1", "#FF7F50", "#F8C537")) +
scale_x_discrete(labels = expression(italic("Cx. pipiens"), italic("Cx. restuans"))) +
my_custom_theme()+
labs(fill="Category",x="Species", y="Infection Rate (MLE)", title=""
#title=expression(paste("Surveyed ",italic("Culex "), "Infection Rate, Extreme Outliers (MIR > 200) Not Shown" ))
)
IPS_Graph_Categorized
IPS_Graph_Categorized<-IPS_Categorized %>%
filter(CI=="bsc") %>%
mutate(Species = case_when(
Species == "R" ~ "Cx. restuans",
Species == "P" ~ "Cx. pipiens"),
Month=case_when(
Month=="J"~"July",
Month=="A"~"August"),
Category=case_when(
Category=="L"~"Lower",
Category=="E"~"Equal",
Category=="H"~"Higher",
)) %>%
mutate(Month = factor(Month, levels = month.name),
Category=factor(Category, levels=c("Lower","Equal","Higher"))) %>%
ggplot(aes(
x = Species,
y = PointEst,
fill = Category,
)) +
facet_wrap(~Month)+
geom_bar(stat = "identity", position = position_dodge(width = 0.9), color="black",alpha=0.3) +  # Bars dodged
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(width = 0.9),  # Error bars dodged
width = 0.25) +
scale_fill_manual(values = c("#25CED1", "#FF7F50", "#F8C537")) +
scale_x_discrete(labels = expression(italic("Cx. pipiens"), italic("Cx. restuans"))) +
my_custom_theme()+
labs(fill="Category",x="Species", y="Infection Rate (MLE)", title=""
)
IPS_Graph_Categorized
#| label: load_packages and set theme
#| message: false
#| warning: false
if (!require(pacman)) install.packages("pacman")
pacman::p_load(ggplot2, lmtest, ggpubr, aod, forcats, flextable, lme4, magrittr,ggdark, lubridate,update = FALSE)
theme_set(theme_bw())
my_custom_theme <- function() {
theme(legend.key.size = unit(2, 'cm'), #change legend key size
legend.box.background = element_rect(color="white", size=2),
legend.key.height = unit(1.01, 'cm'), #change legend key height
legend.key.width = unit(0.8, 'cm'), #change legend key width
legend.title = element_text(size=20, face="bold"), #change legend title font size
legend.text = element_text(size=15),
plot.title = element_text(size=30),
axis.title = element_text(size=22),
axis.text = element_text(size = 18))
}
#| label: Read_Data
#| message: false
#| warning: false
RestID_Full<-read.csv(here::here("Thesis_Projects", "Publication","RestID_Full.csv"))
#| label: load_packages and set theme
#| message: false
#| warning: false
if (!require(pacman)) install.packages("pacman")
pacman::p_load(ggplot2, lmtest, ggpubr, aod, forcats, flextable, lme4, magrittr,ggdark, lubridate,update = FALSE)
theme_set(theme_bw())
my_custom_theme <- function() {
theme(legend.key.size = unit(2, 'cm'), #change legend key size
legend.box.background = element_rect(color="white", size=2),
legend.key.height = unit(1.01, 'cm'), #change legend key height
legend.key.width = unit(0.8, 'cm'), #change legend key width
legend.title = element_text(size=20, face="bold"), #change legend title font size
legend.text = element_text(size=15),
plot.title = element_text(size=30),
axis.title = element_text(size=22),
axis.text = element_text(size = 18))
}
#| label: Read_Data
#| message: false
#| warning: false
RestID_Full<-read.csv(here::here("Publication","RestID_Full.csv"))
#| label: Wrangling Dataframes
#| message: false
#| warning: false
my_y_title <- expression(paste("Proportion ",italic("Cx. pipiens ")))
RestID_Full$Month_f = factor(RestID_Full$Month, levels=c('Jul','Aug'))
RestID_Full$Category_f=factor(RestID_Full$Category.x, levels=c('Lower','Equal', 'Higher'))
#| label: Graphing
#| message: false
#| warning: false
my_y_title <- expression(paste(italic("Cx. pipiens "), "by Site Category (%)" ))
FullFac_Aim1<-ggplot(data=RestID_Full,aes(Category_f,PropPip))+
facet_grid(Year ~ Month_f)+
geom_boxplot(data=RestID_Full, aes(y=PropPip,x=Category_f, fill=Category_f),color="black",outlier.shape=NA, alpha=0.2)+
geom_jitter(data=RestID_Full, width= 0.3, aes(y=PropPip,
x=Category_f, fill=Category_f), color="black",shape=21, size=3)+
theme_bw()+
# scale_x_discrete(limits = c("Equal","Higher","Lower"))+
scale_fill_manual(values = c("#25CED1","#FF7F50", "#F8C537"))+
scale_y_continuous(limits=c(40,101))+
theme(legend.position ='none', axis.text=element_text(size=15),
axis.title=element_text(size=22), strip.text.x = element_text(size = 15), strip.text.y = element_text(size = 15))+
ylab(my_y_title) + xlab("Observed vs. Predicted Human WNv Cases")
FullFac_Aim1
library("ggmap")
register_stadiamaps("53c28c44-18b7-483b-bb9a-ceab0cf2abe1")
A2BaseMap_2=get_stadiamap(bbox = c(left = -88.21, bottom = 41.94, right = -87.79, top = 42.17), zoom = 12, maptype = c("stamen_terrain_lines"), labels="false")
PropPipHexMap= ggmap(A2BaseMap_2)+
labs(x="Longitude",y="Latitude")+
geom_point(data=RestID_Full, aes(x=X, y=Y, shape=Category.x, fill=PropPip), color="black",inherit.aes = FALSE, size=7)+
facet_grid(Year ~ Month)+
scale_shape_manual(values = c("Equal" = 21,
"Lower"=22,
"Higher"=24))+
labs(shape="Category", fill="Percentage \nCx. pipiens")+
scale_fill_viridis_c(option = "inferno")
PropPipHexMap
#| label: Clustered Binomial suggested by RLS
#| message: false
#| warning: false
#Reshaping data
data_long <- with(RestID_Full[,c(1:6)],data.frame(
Month=rep(Month,Num.Rest + Num.Pip),
Category=rep(Category, Num.Rest + Num.Pip),
Year=rep(Year, Num.Rest + Num.Pip),
ID=rep(rep(c("Num.Rest","Num.Pip"),nrow(RestID_Full)),c(rbind(Num.Rest,Num.Pip))),
Hex=rep(Hex, Num.Rest + Num.Pip)))
RestID_Full
#| label: Clustered Binomial suggested by RLS
#| message: false
#| warning: false
#Reshaping data
data_long <- with(RestID_Full[,c(1:6)],data.frame(
Month=rep(Month,Num.Rest + Num.Pip),
Category=rep(Category.x, Num.Rest + Num.Pip),
Year=rep(Year, Num.Rest + Num.Pip),
ID=rep(rep(c("Num.Rest","Num.Pip"),nrow(RestID_Full)),c(rbind(Num.Rest,Num.Pip))),
Hex=rep(Hex, Num.Rest + Num.Pip)))
RestID_Full
#| label: Clustered Binomial suggested by RLS
#| message: false
#| warning: false
#Reshaping data
data_long <- with(RestID_Full[,c(1:6)],data.frame(
Month=rep(Month,Num.Rest + Num.Pip),
Category=rep(Category.x, Num.Rest + Num.Pip),
Year=rep(Year, Num.Rest + Num.Pip),
ID=rep(rep(c("Num.Rest","Num.Pip"),nrow(RestID_Full)),c(rbind(Num.Rest,Num.Pip))),
Hex=rep(HexID, Num.Rest + Num.Pip)))
RestID_Full
RestID_Full
#| label: load_packages and set theme
#| message: false
#| warning: false
if (!require(pacman)) install.packages("pacman")
pacman::p_load(ggplot2, lmtest, ggpubr, aod, forcats, flextable, lme4, magrittr,ggdark, lubridate,update = FALSE)
theme_set(theme_bw())
my_custom_theme <- function() {
theme(legend.key.size = unit(2, 'cm'), #change legend key size
legend.box.background = element_rect(color="white", size=2),
legend.key.height = unit(1.01, 'cm'), #change legend key height
legend.key.width = unit(0.8, 'cm'), #change legend key width
legend.title = element_text(size=20, face="bold"), #change legend title font size
legend.text = element_text(size=15),
plot.title = element_text(size=30),
axis.title = element_text(size=22),
axis.text = element_text(size = 18))
}
#| label: Read_Data
#| message: false
#| warning: false
RestID_Full<-read.csv(here::here("Publication","RestID_Full.csv"))
#| label: Wrangling Dataframes
#| message: false
#| warning: false
my_y_title <- expression(paste("Proportion ",italic("Cx. pipiens ")))
RestID_Full$Month_f = factor(RestID_Full$Month, levels=c('Jul','Aug'))
RestID_Full$Category_f=factor(RestID_Full$Category.x, levels=c('Lower','Equal', 'Higher'))
#| label: Graphing
#| message: false
#| warning: false
my_y_title <- expression(paste(italic("Cx. pipiens "), "by Site Category (%)" ))
FullFac_Aim1<-ggplot(data=RestID_Full,aes(Category_f,PropPip))+
facet_grid(Year ~ Month_f)+
geom_boxplot(data=RestID_Full, aes(y=PropPip,x=Category_f, fill=Category_f),color="black",outlier.shape=NA, alpha=0.2)+
geom_jitter(data=RestID_Full, width= 0.3, aes(y=PropPip,
x=Category_f, fill=Category_f), color="black",shape=21, size=3)+
theme_bw()+
# scale_x_discrete(limits = c("Equal","Higher","Lower"))+
scale_fill_manual(values = c("#25CED1","#FF7F50", "#F8C537"))+
scale_y_continuous(limits=c(40,101))+
theme(legend.position ='none', axis.text=element_text(size=15),
axis.title=element_text(size=22), strip.text.x = element_text(size = 15), strip.text.y = element_text(size = 15))+
ylab(my_y_title) + xlab("Observed vs. Predicted Human WNv Cases")
FullFac_Aim1
library("ggmap")
register_stadiamaps("53c28c44-18b7-483b-bb9a-ceab0cf2abe1")
A2BaseMap_2=get_stadiamap(bbox = c(left = -88.21, bottom = 41.94, right = -87.79, top = 42.17), zoom = 12, maptype = c("stamen_terrain_lines"), labels="false")
PropPipHexMap= ggmap(A2BaseMap_2)+
labs(x="Longitude",y="Latitude")+
geom_point(data=RestID_Full, aes(x=X, y=Y, shape=Category.x, fill=PropPip), color="black",inherit.aes = FALSE, size=7)+
facet_grid(Year ~ Month)+
scale_shape_manual(values = c("Equal" = 21,
"Lower"=22,
"Higher"=24))+
labs(shape="Category", fill="Percentage \nCx. pipiens")+
scale_fill_viridis_c(option = "inferno")
PropPipHexMap
#| label: Clustered Binomial suggested by RLS
#| message: false
#| warning: false
#Reshaping data
data_long <- with(RestID_Full[,c(1:6)],data.frame(
Month=rep(Month,Num.Rest + Num.Pip),
Category=rep(Category, Num.Rest + Num.Pip),
Year=rep(Year, Num.Rest + Num.Pip),
ID=rep(rep(c("Num.Rest","Num.Pip"),nrow(RestID_Full)),c(rbind(Num.Rest,Num.Pip))),
Hex=rep(Hex, Num.Rest + Num.Pip)))
#Reshaping data
data_long <- with(RestID_Full[,c(1:6)],data.frame(
Month=rep(Month,Num.Rest + Num.Pip),
Category=rep(Category, Num.Rest + Num.Pip),
Year=rep(Year, Num.Rest + Num.Pip),
ID=rep(rep(c("Num.Rest","Num.Pip"),nrow(RestID_Full)),c(rbind(Num.Rest,Num.Pip))),
Hex=rep(HexID, Num.Rest + Num.Pip)))
#Reshaping data
data_long <- with(RestID_Full[,c(1:6)],data.frame(
Month=rep(Month,Num.Rest + Num.Pip),
Category=rep(Category.x, Num.Rest + Num.Pip),
Year=rep(Year, Num.Rest + Num.Pip),
ID=rep(rep(c("Num.Rest","Num.Pip"),nrow(RestID_Full)),c(rbind(Num.Rest,Num.Pip))),
Hex=rep(HexID, Num.Rest + Num.Pip)))
#| label: load_packages and set theme
#| message: false
#| warning: false
if (!require(pacman)) install.packages("pacman")
pacman::p_load(ggplot2, lmtest, ggpubr, aod, forcats, flextable, lme4, magrittr,ggdark, lubridate,update = FALSE)
theme_set(theme_bw())
my_custom_theme <- function() {
theme(legend.key.size = unit(2, 'cm'), #change legend key size
legend.box.background = element_rect(color="white", size=2),
legend.key.height = unit(1.01, 'cm'), #change legend key height
legend.key.width = unit(0.8, 'cm'), #change legend key width
legend.title = element_text(size=20, face="bold"), #change legend title font size
legend.text = element_text(size=15),
plot.title = element_text(size=30),
axis.title = element_text(size=22),
strip.text = element_text(size=22),
axis.text = element_text(size = 18))
}
#| label: Read_Data
#| message: false
#| warning: false
RPDF<-read.csv(here::here("Thesis_Projects", "CSVs","Attempttograph.csv"))
SDFull<-read.csv(here::here("Thesis_Projects", "CSVs", "SampleDepthAnalysis2.csv"))
BaseMap<-read.csv(here::here("Thesis_Projects", "CSVs", "BaseHexMap.csv"))
RPDF_2<-RPDF %>%
dplyr::rename(Trap.ID=Hex)
MergedCompMap<-
dplyr::left_join(RPDF_2,BaseMap,
by="Trap.ID")%>%
mutate(
Month = fct_relevel(
Month,
c("Jul","Aug")),
Category.x=fct_relevel(Category.x,c("Lower","Equal","Higher")))
file_path <- here::here("R Spreadsheets", "RestID_Full.csv")
write.csv(MergedCompMap, file_path, row.names = FALSE)
# SpeciesCounts<-MergedCompMap %>%
#   group_by(Month,Year) %>%
#   dplyr::summarise(sum(c(Num.Rest,Num.Pip)))
#attach(RPDF)
#| label: Wrangling Dataframes
#| message: false
#| warning: false
my_y_title <- expression(paste("Proportion ",italic("Cx. pipiens ")))
RPDF$Month_f = factor(RPDF$Month, levels=c('Jul','Aug'))
RPDF$Category_f=factor(RPDF$Category, levels=c('Lower','Equal', 'Higher'))
#| label: Graphing
#| message: false
#| warning: false
my_y_title <- expression(paste(italic("Cx. pipiens "), "by Site Category (%)" ))
FullFac_Aim1<-ggplot(data=RPDF,aes(Category_f,PropPip))+
facet_grid(Year ~ Month_f)+
geom_boxplot(data=RPDF, aes(y=PropPip,x=Category_f, fill=Category_f),color="black",outlier.shape=NA, alpha=0.2)+
geom_jitter(data=RPDF, width= 0.3, aes(y=PropPip,
x=Category_f, fill=Category_f), color="black",shape=21, size=3)+
theme_bw()+
# scale_x_discrete(limits = c("Equal","Higher","Lower"))+
scale_fill_manual(values = c("#25CED1","#FF7F50", "#F8C537"))+
scale_y_continuous(limits=c(40,101))+
theme(legend.position ='none', axis.text=element_text(size=15),
axis.title=element_text(size=22), strip.text.x = element_text(size = 15), strip.text.y = element_text(size = 15))+
ylab(my_y_title) + xlab("Observed vs. Predicted Human WNV Cases")
FullFac_Aim1
ggsave(here::here("Thesis_Projects", "ThesisFigures", "PostRU_FullFacet.png"),  width = 11, height = 9, dpi = 300)
CompSimple<-RPDF %>%
mutate(MonthYr=paste(Month, Year, sep = "-")) %>%
dplyr::select(-c(Category,Hex,Category_f,Month_f,PropPip,Month,Year)) %>%
tidyr::pivot_longer(
cols = starts_with('Num'),
names_to = 'species',
values_to = 'count'
) %>%
dplyr::mutate(species = dplyr::case_when(
species == "Num.Pip" ~ "Cx. pipiens",
species == "Num.Rest" ~ "Cx. restuans"),
MonthYr=fct_relevel(MonthYr,"Jul-2021","Aug-2021","Jul-2022","Aug-2022")) %>%
group_by(species,MonthYr) %>%
dplyr::reframe(Total=sum(count)) %>%
ggplot(aes(
x = MonthYr,
y = Total,
fill = species,
)) +
geom_bar(color = "black",alpha = 0.3, stat="identity",position="fill") +
scale_fill_manual(values = c("lightgoldenrod", "cadetblue2")) +
labs(fill="Species",x="Quarter", y="Proportion", title=""
)+
theme_classic()+
my_custom_theme()
CompSimple
ggsave(here::here("Thesis_Projects", "ThesisFigures", "CompSimple.png"),  width = 11, height = 9, dpi = 300)
RPDF_2 %>%
dplyr::filter(Month=="Jul") %>%
dplyr::mutate(Trap.ID = fct_rev(factor(Trap.ID))) %>%
ggplot(aes(PropPip, Trap.ID)) +
facet_wrap(~Category)+
geom_line(aes(group = Trap.ID)) +
geom_point(aes(color = factor(Year)),size=3)+
labs(color="Year", y="Site",x="Proportion Pipiens", Title="Site hange in Pip between years")
# RPDF_2 %>%
library("ggmap")
register_stadiamaps("53c28c44-18b7-483b-bb9a-ceab0cf2abe1")
A2BaseMap_2=get_stadiamap(bbox = c(left = -88.21, bottom = 41.94, right = -87.79, top = 42.17), zoom = 12, maptype = c("stamen_terrain_lines"), labels="false")
PropPipHexMap= ggmap(A2BaseMap_2)+
labs(x="Longitude",y="Latitude")+
geom_point(data=MergedCompMap, aes(x=X, y=Y, shape=Category.x, fill=PropPip), color="black",inherit.aes = FALSE, size=7)+
facet_grid(Year ~ Month)+
scale_shape_manual(values = c("Equal" = 21,
"Lower"=22,
"Higher"=24))+
labs(shape="Category", fill="Percentage \nCx. pipiens")+
scale_fill_viridis_c(option = "inferno")
PropPipHexMap
ggsave(here::here("Thesis_Projects", "ThesisFigures", "PropPipHexMap.png"),  width = 11, height = 9, dpi = 300)
WholeGraph<-ggplot(data=RPDF,aes(Category_f,PropPip))+
facet_wrap(~Month_f)+
geom_boxplot(data=RPDF, aes(y=PropPip,x=Category_f, fill=Category_f),color="black",outlier.shape=NA, alpha=0.2)+
geom_jitter(data=RPDF, width= 0.3, aes(y=PropPip,
x=Category_f, fill=Category_f), color="black",shape=21, size=3)+
theme_bw()+
# scale_x_discrete(limits = c("Equal","Higher","Lower"))+
scale_fill_manual(values = c("#25CED1","#FF7F50", "#F8C537"))+
scale_y_continuous(limits=c(40,101))+
theme(legend.position ='none', axis.text=element_text(size=15),
axis.title=element_text(size=22), strip.text.x = element_text(size = 15), strip.text.y = element_text(size = 15))+
ylab(my_y_title) + xlab("Observed vs. Predicted Human WNv Cases")
WholeGraph
ggsave(here::here("Thesis_Projects", "ThesisFigures", "WholeGraph.png"),  width = 11, height = 9, dpi = 300)
SDFull$MonthO = factor(SDFull$Month, levels=c('Jul','Aug'))
SDFull$Category_f=factor(SDFull$Category, levels=c('Lower','Equal', 'Higher'))
SDAnalysisGraph<-ggplot(data=SDFull,aes(Category_f, Sample.Depth))+
facet_grid(Year ~ MonthO)+
geom_boxplot(data=SDFull, aes(y=Sample.Depth,x=Category_f, fill=Category_f),outlier.shape=NA, alpha=0.2)+
geom_jitter(data=SDFull, width= 0.3, aes(y=Sample.Depth, x=Category_f, fill=Category_f), shape=21, size=3)+ theme_bw()+
#scale_x_discrete(limits = c("Equal","Higher","Lower"))+
scale_fill_manual(values = c("#25CED1","#FF7F50", "#F8C537"))+
#scale_y_continuous(limits=c(40,100))+
theme(legend.position ='none', axis.text=element_text(size=15),
axis.title=element_text(size=22), strip.text.x = element_text(size = 15), strip.text.y = element_text(size = 15))+
ylab("Samples Identified" ) + xlab("Predicted vs. Observed Human WNv Cases")
SDAnalysisGraph
ggsave(here::here("Thesis_Projects", "ThesisFigures", "SampleDepthAnalysisgrph.png"),  width = 11, height = 9, dpi = 300)
#| label: Clustered Binomial suggested by RLS
#| message: false
#| warning: false
#Reshaping data
data_long <- with(RPDF[,c(1:6)],data.frame(
Month=rep(Month,Num.Rest + Num.Pip),
Category=rep(Category, Num.Rest + Num.Pip),
Year=rep(Year, Num.Rest + Num.Pip),
ID=rep(rep(c("Num.Rest","Num.Pip"),nrow(RPDF)),c(rbind(Num.Rest,Num.Pip))),
Hex=rep(Hex, Num.Rest + Num.Pip)))
data_long$ID <- as.character(data_long$ID)
data_long$ID <- ifelse(data_long$ID == "Num.Pip", 1, 0)
#definition crossed random effects:a given factor (hex) appears in more than one level of the upper level factor (year).
fullmodel2 <- glmer(ID ~ Category * Month + (1|Year) + (1|Hex), #specifying crossed (vs. nested) random effects
data = data_long, family = binomial)
summary(fullmodel2)
#CALL IT A CLUSTERED BINOMIAL WHERE WE SPECIFIED RANDOM EFFECTS OF YEAR AND SITE
red1Mod <-glmer(ID ~ Category + Month + (1|Year) + (1|Hex), data = data_long, family = binomial)
summary(red1Mod)
lrtest(red1Mod, fullmodel2) #interaction not sig
red2Mod <-glmer(ID ~ Month + (1|Year) + (1|Hex), data = data_long, family = binomial)
summary(red2Mod)
lrtest(red2Mod, red1Mod) #cat not sig
red3Mod <- glmer(ID ~ Category + (1|Year) + (1|Hex), data = data_long, family = binomial)
summary(red3Mod)
lrtest(red3Mod, red1Mod) #month is sig
data_longJ<-data_long %>%
dplyr::filter(Month=="Jul") %>%
dplyr::mutate(ID = as.numeric(ID))
fullmodelJ <- glm(ID ~ 1 + Year,data = data_longJ, family = binomial)
fullmodelJ2<-glm(ID ~ 1,data = data_longJ, family = binomial)
lrtest(fullmodelJ2,fullmodelJ)
ASOAQ<-read.csv(here::here("Thesis_Projects", "CSVs","ALLSampleOrganization_All_Quarters.csv"))
library(dplyr)
RawCounts<-ASOAQ %>%
rename("Species"="Abdomen.Species.ID") %>%
mutate(Species = tolower(Species),
Month=fct_relevel(Month,c("July","August")),
Species = ifelse(Species == "", "Unknown", Species),
TRAP.ID = fct_rev(factor(TRAP.ID))) %>%
select(c(TRAP.ID,Month,Year,Species)) %>%
group_by(TRAP.ID,Month, Year, Species) %>%
summarise(Count = n(), .groups = "drop") %>%
ggplot(aes(TRAP.ID,Count,fill=Species)) +
facet_grid(Year~Month)+
geom_bar(color = "black", stat="identity",position="stack")+
scale_fill_manual(
values = c("p" = "lightgoldenrod", "r" = "cadetblue2", "s" = "lightgreen", "Unknown" = "gray"),
labels = c(
p = expression(italic("Cx. pipiens")),
r = expression(italic("Cx. restuans")),
s = expression(italic("Cx. salinarius")),
Unknown = "Unknown"
)
) +
coord_flip()+
labs(x="Sampling Site")+
my_custom_theme()
RawCounts
ggsave(here::here("Thesis_Projects", "ThesisFigures", "TotalNumbersSamples.png"),  width = 12, height = 9, dpi = 300)
RPDF
View(RPDF)
View(RestID_Full)
#| label: Clustered Binomial suggested by RLS
#| message: false
#| warning: false
#Reshaping data
data_long <- with(RestID_Full[,c(1:6)],data.frame(
Month=rep(Month,Num.Rest + Num.Pip),
Category=rep(Category.x, Num.Rest + Num.Pip),
Year=rep(Year, Num.Rest + Num.Pip),
ID=rep(rep(c("Num.Rest","Num.Pip"),nrow(RestID_Full)),c(rbind(Num.Rest,Num.Pip))),
Hex=rep(Trap.ID, Num.Rest + Num.Pip)))
data_long$ID <- as.character(data_long$ID)
data_long$ID <- ifelse(data_long$ID == "Num.Pip", 1, 0)
#definition crossed random effects:a given factor (hex) appears in more than one level of the upper level factor (year).
fullmodel2 <- glmer(ID ~ Category * Month + (1|Year) + (1|Hex), #specifying crossed (vs. nested) random effects
data = data_long, family = binomial)
summary(fullmodel2)
#CALL IT A CLUSTERED BINOMIAL WHERE WE SPECIFIED RANDOM EFFECTS OF YEAR AND SITE
red1Mod <-glmer(ID ~ Category + Month + (1|Year) + (1|Hex), data = data_long, family = binomial)
summary(red1Mod)
lrtest(red1Mod, fullmodel2) #interaction not sig
red2Mod <-glmer(ID ~ Month + (1|Year) + (1|Hex), data = data_long, family = binomial)
summary(red2Mod)
lrtest(red2Mod, red1Mod) #cat not sig
red3Mod <- glmer(ID ~ Category + (1|Year) + (1|Hex), data = data_long, family = binomial)
summary(red3Mod)
lrtest(red3Mod, red1Mod) #month is sig
data_longJ<-data_long %>%
dplyr::filter(Month=="Jul") %>%
dplyr::mutate(ID = as.numeric(ID))
fullmodelJ <- glm(ID ~ 1 + Year,data = data_longJ, family = binomial)
fullmodelJ2<-glm(ID ~ 1,data = data_longJ, family = binomial)
lrtest(fullmodelJ2,fullmodelJ)
